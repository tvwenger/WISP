#
# Define calibrator fields. Leave value blank if you want to
# read the calibrator names from the LISTOBS output.
#
# Separate mutliple fields on different lines. Example:
# Primary Calibrators = 3C000
#                       J9999
#
[Calibrators]
Primary Calibrators = 
Secondary Calibrators =
Flux Calibrators =
# PolLeakage Calibrators are used to calibrate polarization leakage.
PolLeakage Calibrators =
# PolAngle Calibrators are used to calibrate polarization leakage
# for observations with circular feeds. They must be polarized.
PolAngle Calibrators = 
#=====================================================================
#
# Define flux models for calibrators. Leave blank to use the CASA
# model.
#
# Separate mutliple files/values on different lines. Example:
# Name                        = 3C000
#                               J9999
# Reference Frequency         = 5000MHz
#                               8000MHz
# Flux Density                = 10.1
#                               5.3
# Spectral Index Coefficients = 26.3,-8.2,1.5
#                               40.2,-10.7,0.9
#
[Calibrator Models]
Name =
# Reference frequency with units (e.g., 5000MHz)
Reference Frequency =
# Flux density (Jy) at the reference frequency
Flux Density =
# The model flux density, F, at a given frequency, f, is given by:
# F(f) = F0 * (f/f0) ^ SUM(s[i]*log10(f/f0)^i)
# where F0 is the flux density at the reference frequency, f0, and
# s[i] are the spectral index coefficients.
Spectral Index Coefficients =
# The polarization fraction, P, at a given frequency, f, is given by:
# P(f) = SUM(c[i]*((f - f0)/f0)^i)
# where f0 is the reference frequency and c[i] are the polarization
# fraction coefficients.
Polarization Fraction Coefficients =
# The polarization angle, A, at a given frequency, f, is given by:
# A(f) = SUM(a[i]*((f - f0)/f0)^i)
# where f0 is the reference frequency and a[i] are the polarization
# angle coefficients.
Polarization Angle Coefficients = 
#=====================================================================
#
# Define the line spectral windows and continuum spectral windows.
#
# Values should be comma-separated, for example:
# Line = 2,5,8,11,14,17,21,22
# Continuum = 0,1,3,4,6,7,9,10,12,13,15,16,18,19,20,23
#
[Spectral Windows]
Line      = 
Continuum = 
#=====================================================================
#
# Define criteria for global flagging. All data meeting any of these
# criteria are flagged.
#
# Separate multiple values with commas following the CASA FLAGDATA
# syntax. For example, this will flag all data from ea01, all data
# from ea02, all line spectral window data between channel 0 and 200,
# etc.:
# Antenna = ea01,ea02
# Line Channels = 0~200,900~1100
# Continuum Channels = 0,10,25,40
#
[Flags]
Scan = 
Antenna = 
Spectral Window = 
Line Channels = 
Continuum Channels = 
#=====================================================================
#
# Define line and continuum channels that should be overwritten via
# interpolation from adjacent data.
#
# Separate values with commas. For example:
# Line Channels      = 256,512
# Continuum Channels = 2,5,10
#
[Interpolate]
Line Channels      = 
Continuum Channels = 
#=====================================================================
#
# Define clean image and cube parameters.
#
# Multiple values should be separated by commas. For example:
# restfreqs = 8045.605MHz,8309.385MHz,8584.823MHz
# imsize    = 600,600
# pblimit   = 0.1
# etc.
#
[Clean]
imsize      =
pblimit     =
# cell units [arcseconds]
cell        = 
weighting   = 
robust      = 
scales      = 
gain        = 
cyclefactor = 
lightniter  = 
maxniter    = 
nrms        = 
contpbchan  = 
nterms      =
# outertaper units [arcseconds]
outertaper  = 
#
# Line cube parameters
#
lineids       =
# restfreqs including units (e.g. 5000MHz,5500MHz)
restfreqs     = 
# start units [km/s]
start         = 
# width units [km/s]
width         = 
nchan         = 
chanbuffer    = 
lineoutframe  = 
veltype       = 
interpolation = 
#
# Continuum cube parameters
#
contoutframe = 
#=====================================================================
#
# Define auto-multithresh auto-masking parameters for untapered data
# For more information see the CASA documentation for auto-multithresh
#
[Mask NoTaper]
#
# Continuum spectral windows
#
contpbmask            = 
contsidelobethreshold = 
contnoisethreshold    = 
contlownoisethreshold = 
contnegativethreshold = 
contsmoothfactor      = 
contminbeamfrac       = 
contcutthreshold      = 
contgrowiterations    = 
#
# Line spectral windows
#
linepbmask            =
linesidelobethreshold =
linenoisethreshold    =
linelownoisethreshold =
linenegativethreshold =
linesmoothfactor      =
lineminbeamfrac       =
linecutthreshold      =
linegrowiterations    =
#=====================================================================
#
# Define auto-multithresh auto-masking parameters for tapered data
# For more information see the CASA documentation for auto-multithresh
#
[Mask Taper]
#
# Continuum spectral windows
#
contpbmask            = 
contsidelobethreshold = 
contnoisethreshold    = 
contlownoisethreshold = 
contnegativethreshold = 
contsmoothfactor      = 
contminbeamfrac       = 
contcutthreshold      = 
contgrowiterations    = 
#
# Line spectral windows
#
linepbmask            =
linesidelobethreshold =
linenoisethreshold    =
linelownoisethreshold =
linenegativethreshold =
linesmoothfactor      =
lineminbeamfrac       =
linecutthreshold      =
linegrowiterations    =
#=====================================================================
#
# Define parameters of un-flagging the spectral line data when
# bright spectral lines have been flagged by automatic flagging.
#
# Multiple values are comma-separated. For example:
# chan_offset = 20,20,15,15,15,10,5,0
# chan_width = 100
#
[Unflag]
offset = 
width  =  

